version: "3"

services: 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    environment: 
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks: 
      - logging-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.1.1
    depends_on: 
      - elasticsearch
    ports:
      - 12201:12201/udp
      - 1234:1234/tcp
    volumes:
      - ./local-compose-volumes/logstash/data:/data:ro
      - ./local-compose-volumes/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro 
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    labels:
      traefik.enable: true
      traefik.http.routers.logstash.entrypoints: web
      traefik.http.routers.logstash.rule: "Host(`logstash.local`)"
    networks:
      - logging-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.1
    depends_on:
      - logstash
    ports: 
      - 5601:5601
    labels:
      traefik.enable: true
      traefik.http.routers.kibana.entrypoints: web
      traefik.http.routers.kibana.rule: "Host(`kibana.local`)"
 
    networks: 
      - logging-network

  wids:
    image: python:latest
    depends_on:
      - logstash
    ports:
      - 7777
    entrypoint: /data/entrypoint.sh
    volumes:
      - "./local-compose-volumes/wids-analyzer/:/data:ro"
    networks:
      - logging-network

  traefik:
    image: traefik:latest
    ports:
    - "80:80"
    command: 
      - "--api.insecure=true"
      - '--providers.docker=true'
      - '--entryPoints.web.address=:80'
    volumes:
      - "./local-compose-volumes/traefik/logs:/var/log/"
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - logging-network
    logging:
      driver: json-file
      options:
        'max-size': '10m'
        'max-file': '5'
    
networks: 
  logging-network:
    driver: bridge
